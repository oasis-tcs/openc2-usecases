       title: "OpenC2 Language and Device Template"
      module: "https://oasis-open.org/openc2/oc2ls/v1.1"
 description: "Template for creating OpenC2 v1.1 device schemas"
     imports: {"ls": "https://oasis-open.org/openc2/oc2ls-types/v1.1", "nsid1": "https://example.org/profile1"}
     exports: ["OpenC2-Command", "OpenC2-Response"]
     comment: "To use, delete unused Action/Target/Args/Results, update module, and assign id, name, and nsid for each profile"

OpenC2-Command = Record                                // The Command defines an Action to be performed on a Target
   1 action           Action                           // The task or activity to be performed (i.e., the 'verb').
   2 target           Target                           // The object of the Action. The Action is performed on the Target.
   3 args             Args optional                    // Additional information that applies to the Command.
   4 actuator         Actuator optional                // The subject of the Action. The Actuator executes the Action on the Target.
   5 command_id       ls:Command-ID optional           // An identifier of this Command.

OpenC2-Response = Record
   1 status           ls:Status-Code                   // An integer status code.
   2 status_text      String optional                  // A free-form human-readable description of the Response status.
   3 results          Results optional                 // Map of key:value pairs that contain additional results based on the invoking Command.

Action = Enumerated
   1 scan                                              // Systematic examination of some aspect of the entity or its environment.
   2 locate                                            // Find an object physically, logically, functionally, or by organization.
   3 query                                             // Initiate a request for information.
   6 deny                                              // Prevent a certain event or action from completion, such as preventing a flow from reaching a destination or preventing access.
   7 contain                                           // Isolate a file, process, or entity so that it cannot modify or access assets or processes.
   8 allow                                             // Permit access to or execution of a Target.
   9 start                                             // Initiate a process, application, system, or activity.
  10 stop                                              // Halt a system or end an activity.
  11 restart                                           // Stop then start a system or an activity.
  14 cancel                                            // Invalidate a previously issued Action.
  15 set                                               // Change a value, configuration, or state of a managed entity.
  16 update                                            // Instruct a component to retrieve, install, process, and operate in accordance with a software update, reconfiguration, or other update.
  18 redirect                                          // Change the flow of traffic to a destination other than its original destination.
  19 create                                            // Add a new entity of a known type (e.g., data, files, directories).
  20 delete                                            // Remove an entity (e.g., data, files, flows).
  22 detonate                                          // Execute and observe the behavior of a Target (e.g., file, hyperlink) in an isolated environment.
  23 restore                                           // Return a system to a previously known state.
  28 copy                                              // Duplicate an object, file, data flow, or artifact.
  30 investigate                                       // Task the recipient to aggregate and report information as it pertains to a security event or incident.
  32 remediate                                         // Task the recipient to eliminate a vulnerability or attack point.

Target = Choice
   1 artifact         ls:Artifact                      // An array of bytes representing a file-like object or a link to that object.
   2 command          ls:Command-ID                    // A reference to a previously issued Command.
   3 device           ls:Device                        // The properties of a hardware device.
   7 domain_name      ls:Domain-Name                   // A network domain name.
   8 email_addr       ls:Email-Addr                    // A single email address.
   9 features         ls:Features                      // A set of items used with the query Action to determine an Actuator's capabilities.
  10 file             ls:File                          // Properties of a file.
  11 idn_domain_name  ls:IDN-Domain-Name               // An internationalized domain name.
  12 idn_email_addr   ls:IDN-Email-Addr                // A single internationalized email address.
  13 ipv4_net         ls:IPv4-Net                      // An IPv4 address range including CIDR prefix length.
  14 ipv6_net         ls:IPv6-Net                      // An IPv6 address range including prefix length.
  15 ipv4_connection  ls:IPv4-Connection               // A 5-tuple of source and destination IPv4 address ranges, source and destination ports, and protocol.
  16 ipv6_connection  ls:IPv6-Connection               // A 5-tuple of source and destination IPv6 address ranges, source and destination ports, and protocol.
  20 iri              ls:IRI                           // An internationalized resource identifier (IRI).
  17 mac_addr         ls:MAC-Addr                      // A Media Access Control (MAC) address - EUI-48 or EUI-64 as defined in [EUI].
  18 process          ls:Process                       // Common properties of an instance of a computer program as executed on an operating system.
  25 properties       ls:Properties                    // Data attribute associated with an Actuator.
  19 uri              ls:URI                           // A uniform resource identifier (URI).
   0 ap_name/         nsid1:AP-Target                  // Profile-defined targets

Args = Map{1..*}
   1 start_time       ls:Date-Time optional            // The specific date/time to initiate the Command
   2 stop_time        ls:Date-Time optional            // The specific date/time to terminate the Command
   3 duration         ls:Duration optional             // The length of time for an Command to be in effect
   4 response_requested ls:Response-Type optional      // The type of Response required for the Command: none, ack, status, complete
   0 ap_name/         nsid1:AP-Args optional           // Profile-defined command arguments

Actuator = Choice
   0 ap_name/         nsid1:AP-Specifiers              // Profile-defined actuator specifiers

Results = Map{1..*}                                    // Response Results
   1 versions         ls:Version unique [0..10]        // List of OpenC2 language versions supported by this Actuator
   2 profiles         ls:FieldName unique [0..*]       // List of profiles supported by this Actuator
   3 pairs            Action-Targets optional          // List of targets applicable to each supported Action
   4 rate_limit       Number{0.0..*} optional          // Maximum number of requests per minute supported by design or policy
   5 args             Enumerated(Enum[Args]) [0..*]    // List of supported Command Arguments
   0 ap_name/         nsid1:AP-Results optional        // Profile-defined results

Action-Targets = MapOf(Action, Targets){1..*}          // Targets applicable to each action supported by this device

Targets = ArrayOf(Pointer[Target]){1..*} unique        // Target pointers
